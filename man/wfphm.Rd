% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_wfphm.R
\name{wfphm}
\alias{wfphm}
\alias{wfphm_UI}
\alias{wfphm_server}
\alias{mod_wfphm}
\title{Waterfall heatmap shiny module}
\usage{
wfphm_UI(id, tr_choices = names(tr_mapper_def()))

wfphm_server(
  id,
  bm_dataset,
  group_dataset,
  cat_var = "PARCAT1",
  par_var = "PARAM",
  visit_var = "AVISIT",
  subjid_var = "SUBJID",
  value_vars = c("AVAL", "CHG", "PCHG", "log2AVAL", "log2CHG", "log2PCHG", "log10AVAL",
    "log10CHG", "log10PCHG"),
  bar_group_palette = list(),
  cat_palette = list(),
  tr_mapper = tr_mapper_def(),
  show_x_ticks = TRUE
)

mod_wfphm(
  module_id,
  bm_dataset_name,
  group_dataset_name,
  cat_var = "PARCAT1",
  par_var = "PARAM",
  visit_var = "AVISIT",
  subjid_var = "SUBJID",
  value_vars = c("AVAL", "CHG", "PCHG", "log2AVAL", "log2CHG", "log2PCHG", "log10AVAL",
    "log10CHG", "log10PCHG"),
  bar_group_palette = list(),
  cat_palette = list(),
  tr_mapper = tr_mapper_def(),
  show_x_ticks = TRUE
)
}
\arguments{
\item{id}{Shiny ID \verb{[character(1)]}}

\item{tr_choices}{the names of the entries in tr_mapper}

\item{bm_dataset}{\verb{[shiny::reactive(data.frame) | shinymeta::metaReactive(data.frame)]}

It expects the following format:
\itemize{
\item it contains, at least, the columns specified in the parameters: \code{cat_var}, \code{par_var}, \code{value_vars}, \code{visit_var}
and \code{subjid_var}
\item \code{cat_var}, \code{par_var}, \code{visit_var} and \code{subjid_var} columns are factors
\item It contains at least 1 row
}}

\item{group_dataset}{\verb{[shiny::reactive(data.frame) | shinymeta::metaReactive(data.frame)]}

It expects the following format:
\itemize{
\item it contains, at least, the columns specified in the parameters: \code{subjid_var}
\item \code{subjid_var} columns is a factors
\item It contains at least 1 row
}}

\item{cat_var, par_var, visit_var, subjid_var}{\verb{[character(1)]}

columns used as indicated in each of the subplots}

\item{value_vars}{\verb{[character(1+)]}

possible colum values. If column is labelled, label will be displayed in the value menu}

\item{bar_group_palette}{\verb{[list(palettes)]}

list of custom palettes to apply to bar_grouping. It receives the values used for grouping and must return a DaVinci
palette. Each palette is applied when the name of the entry in the list matches the name of the column used for
grouping}

\item{cat_palette}{\verb{[list(functions)]}

list of functions that receive the values of the variable and returns a vector with the colors for each of the values.
Each palette is applied when the name of the entry in the list matches the name of the selected categorical
variable}

\item{tr_mapper}{\verb{[function(1+)]}

named vector containing a set of transformation where the name is the string shown in the selector and the value is
function to be applied according to details section.}

\item{show_x_ticks}{\verb{[logical(1)]}

show x ticks in the parameter heatmap}

\item{module_id}{Shiny id}

\item{bm_dataset_name, group_dataset_name}{The name of the dataset}
}
\value{
\subsection{UI}{

The menus and plots
}

\subsection{Server}{

NULL
}
}
\description{
A module that creates the following plots with its corresponding menus:
\itemize{
\item A waterfall \link{wfphm_wf}
\item A heatmap for categorical variables \link{wfphm_hmcat}
\item A heatmap for continuous variables \link{wfphm_hmcont}
\item A heatmap that displays a set of parameters \link{wfphm_hmpar}
}
}
\details{
See the subsections for each of plots particularities
\subsection{X axis}{

All charts share the same x-axis order as defined by the value \code{sorted_x} returned by the \link{wfphm_wf}.
}

\subsection{Margins}{

All four plots are aligned on their left and right sides so their x axis are also aligned. Each plot returns
their required margins and we calculate the maximum for each side and return it in the \code{margin} argument of each
plot.
}
}
\section{Functions}{
\itemize{
\item \code{wfphm_UI()}: UI

\item \code{wfphm_server()}: server

\item \code{mod_wfphm()}: dv.manager wrapper for the module

}}
\keyword{main}
